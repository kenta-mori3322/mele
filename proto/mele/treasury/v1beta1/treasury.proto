syntax = "proto3";
package mele.treasury.v1beta1;

option go_package = "github.com/melechain/mele/x/treasury/types";
option (gogoproto.equal_all) = true;

import "gogoproto/gogo.proto";
import "cosmos_proto/coin.proto";

// Params defines the set of params for the treasury module.
message Params {
  option (gogoproto.goproto_stringer) = false;
  option (gogoproto.equal) = false;

  repeated string managers = 1 [ (gogoproto.moretags) = "yaml:\"managers\"" ];
  repeated cosmos.base.v1beta1.Coin disbursement_delay_threshold_amount = 2 [
    (gogoproto.moretags) = "yaml:\"disbursement_delay_threshold_amount\"",
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins",
    (gogoproto.nullable) = false
  ];
  string disbursement_delay_duration = 3
      [ (gogoproto.moretags) = "yaml:\"disbursement_delay_duration\"" ];
  bool mint_enabled = 4 [ (gogoproto.moretags) = "yaml:\"mint_enabled\"" ];
}

message Treasury {
  bool mint_genesis_supply = 1
      [ (gogoproto.moretags) = "yaml:\"mint_genesis_supply\"" ];
  repeated cosmos.base.v1beta1.Coin target_supply = 2 [
    (gogoproto.moretags) = "yaml:\"target_supply\"",
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins",
    (gogoproto.nullable) = false
  ];
  repeated cosmos.base.v1beta1.Coin distributed = 3 [
    (gogoproto.moretags) = "yaml:\"distributed\"",
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins",
    (gogoproto.nullable) = false
  ];
  repeated cosmos.base.v1beta1.Coin burned = 4 [
    (gogoproto.moretags) = "yaml:\"burned\"",
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins",
    (gogoproto.nullable) = false
  ];
}

message Disbursement {
  string operator = 1 [ (gogoproto.moretags) = "yaml:\"operator\"" ];
  string recipient = 2 [ (gogoproto.moretags) = "yaml:\"operator\"" ];
  repeated cosmos.base.v1beta1.Coin amount = 3 [
    (gogoproto.moretags) = "yaml:\"amount\"",
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins",
    (gogoproto.nullable) = false
  ];
  string scheduled_at = 4 [ (gogoproto.moretags) = "yaml:\"scheduled_at\"" ];
  string scheduled_for = 5 [ (gogoproto.moretags) = "yaml:\"scheduled_for\"" ];
  string reference = 6 [ (gogoproto.moretags) = "yaml:\"reference\"" ];
  bool executed = 7 [ (gogoproto.moretags) = "yaml:\"executed\"" ];
}

message Burn {
  string operator = 1 [ (gogoproto.moretags) = "yaml:\"operator\"" ];
  repeated cosmos.base.v1beta1.Coin amount = 2 [
    (gogoproto.moretags) = "yaml:\"amount\"",
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins",
    (gogoproto.nullable) = false
  ];
  string scheduled_at = 4 [ (gogoproto.moretags) = "yaml:\"scheduled_at\"" ];
  string scheduled_for = 5 [ (gogoproto.moretags) = "yaml:\"scheduled_for\"" ];
}

message ReferenceAmountInfo {
  option (gogoproto.equal) = false;

  string reference = 1 [ (gogoproto.moretags) = "yaml:\"reference\"" ];
  string amount = 2 [ (gogoproto.moretags) = "yaml:\"amount\"" ];
}

message MintTreasurySupplyProposal {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;
  option (gogoproto.goproto_stringer) = false;

  string title = 1;
  string description = 2;
  repeated cosmos.base.v1beta1.Coin amount = 3 [
    (gogoproto.nullable) = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
}

message MintTreasurySupplyProposalWithDeposit {
  option (gogoproto.goproto_getters) = false;
  option (gogoproto.goproto_stringer) = true;

  string title = 1 [ (gogoproto.moretags) = "yaml:\"title\"" ];
  string description = 2 [ (gogoproto.moretags) = "yaml:\"description\"" ];
  string amount = 3 [ (gogoproto.moretags) = "yaml:\"amount\"" ];
  string deposit = 4 [ (gogoproto.moretags) = "yaml:\"deposit\"" ];
}

message BurnTreasurySupplyProposal {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;
  option (gogoproto.goproto_stringer) = false;

  string title = 1;
  string description = 2;
  repeated cosmos.base.v1beta1.Coin amount = 3 [
    (gogoproto.nullable) = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
}

message BurnTreasurySupplyProposalWithDeposit {
  option (gogoproto.goproto_getters) = false;
  option (gogoproto.goproto_stringer) = true;

  string title = 1 [ (gogoproto.moretags) = "yaml:\"title\"" ];
  string description = 2 [ (gogoproto.moretags) = "yaml:\"description\"" ];
  string amount = 3 [ (gogoproto.moretags) = "yaml:\"amount\"" ];
  string deposit = 4 [ (gogoproto.moretags) = "yaml:\"deposit\"" ];
}
